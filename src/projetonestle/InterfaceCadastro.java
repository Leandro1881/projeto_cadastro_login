/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetonestle;


import Menu.Menu;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.LinkedList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author LEANDRO
 */
public class InterfaceCadastro extends javax.swing.JFrame {
    public File arq2;
    public int cont;
    public String palavra;
    Clientes clientes = new Clientes();
    LinkedList email = new LinkedList();
    LinkedList senha = new LinkedList();
    
    /**
     * Creates new form InterfaceCadastro
     */
    
    
    
    public InterfaceCadastro() {
        initComponents();
        TextPrompt placeholder = new TextPrompt("Nome/nome completo.", txtuser);
        TextPrompt placeholder1 = new TextPrompt("E-mail.", txtemail);
        TextPrompt placeholder2 = new TextPrompt("Senha.", txtps);
        TextPrompt placeholder3 = new TextPrompt("Confirmar senha.", txtps1);
        txtuser.setBackground(new java.awt.Color(0,0,0, 1));
        txtemail.setBackground(new java.awt.Color(0,0,0, 1));
        txtps.setBackground(new Color(0, 0, 0, 2));
        txtps1.setBackground(new java.awt.Color(0,0,0, 2));
        olho2.setVisible(false);
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cadastrar = new javax.swing.JButton();
        erro = new javax.swing.JButton();
        txtuser = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtps = new javax.swing.JPasswordField();
        txtps1 = new javax.swing.JPasswordField();
        olho2 = new javax.swing.JLabel();
        olho = new javax.swing.JLabel();
        Menu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastro");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        Cadastrar.setBorder(null);
        Cadastrar.setContentAreaFilled(false);
        Cadastrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarActionPerformed(evt);
            }
        });
        Cadastrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CadastrarKeyPressed(evt);
            }
        });
        getContentPane().add(Cadastrar);
        Cadastrar.setBounds(350, 400, 140, 60);

        erro.setContentAreaFilled(false);
        erro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        erro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erroActionPerformed(evt);
            }
        });
        getContentPane().add(erro);
        erro.setBounds(600, 500, 40, 20);

        txtuser.setBackground(new java.awt.Color(58, 44, 157));
        txtuser.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtuser.setBorder(null);
        txtuser.setOpaque(false);
        txtuser.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                txtuserComponentHidden(evt);
            }
        });
        txtuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtuserActionPerformed(evt);
            }
        });
        txtuser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtuserKeyPressed(evt);
            }
        });
        getContentPane().add(txtuser);
        txtuser.setBounds(350, 110, 360, 40);

        txtemail.setBackground(new java.awt.Color(58, 44, 157));
        txtemail.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtemail.setBorder(null);
        txtemail.setOpaque(false);
        txtemail.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                txtemailComponentHidden(evt);
            }
        });
        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        txtemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtemailKeyPressed(evt);
            }
        });
        getContentPane().add(txtemail);
        txtemail.setBounds(350, 180, 360, 40);

        txtps.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtps.setBorder(null);
        txtps.setOpaque(false);
        txtps.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpsKeyPressed(evt);
            }
        });
        getContentPane().add(txtps);
        txtps.setBounds(350, 260, 360, 30);

        txtps1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtps1.setBorder(null);
        txtps1.setOpaque(false);
        txtps1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtps1KeyPressed(evt);
            }
        });
        getContentPane().add(txtps1);
        txtps1.setBounds(350, 340, 360, 30);

        olho2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AAAA.png"))); // NOI18N
        olho2.setText("jLabel2");
        olho2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        olho2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                olho2MouseClicked(evt);
            }
        });
        getContentPane().add(olho2);
        olho2.setBounds(680, 230, 34, 24);

        olho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetonestle/0.png"))); // NOI18N
        olho.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        olho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                olhoMouseClicked(evt);
            }
        });
        getContentPane().add(olho);
        olho.setBounds(350, 230, 30, 20);

        Menu.setContentAreaFilled(false);
        Menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuMouseClicked(evt);
            }
        });
        Menu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MenuKeyPressed(evt);
            }
        });
        getContentPane().add(Menu);
        Menu.setBounds(580, 400, 120, 70);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetonestle/Screenshot_10.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1080, 575);

        setSize(new java.awt.Dimension(1094, 611));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuMouseClicked
        dispose();
        Menu m = new Menu();
        m.setVisible(true);
    }//GEN-LAST:event_MenuMouseClicked

    private void txtuserComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_txtuserComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_txtuserComponentHidden

    private void txtemailComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_txtemailComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailComponentHidden
    
    
    public static boolean isValidEmailAddressRegex(String email) {
    boolean isEmailIdValid = false;
    if (email != null && email.length() > 0) {
        String expression = "^[\\w\\.-]+@([\\w\\-]+\\.)+[A-Z]{2,4}$";
        Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(email);
        if (matcher.matches()) {
            isEmailIdValid = true;
        }
    }
    return isEmailIdValid;
}
    
    public static boolean isValidName(String name){
        boolean nameValid = false;
    if (name != null && name.length() > 0) {
        String expression = "(?=^.{2,60}$)^[A-Z][a-z]+(?:[ ](?:das?|dos?|de|e|[A-Z][a-z]+))*$";
        Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(name);
        if (matcher.matches()) {
            nameValid = true;
        }
    }
    return nameValid;
}
    
   public static boolean senhaValida(String senha, String senha1) {
    if (!senha.equals(senha1)) return false;
    if (senha.length() < 6 && senha1.length() < 6) return false;

    boolean achouNumero = false;
    boolean achouMaiuscula = false;
    boolean achouMinuscula = false;
    boolean achouSimbolo = false;
    for (char c : senha.toCharArray()) {
         if (c >= '0' && c <= '9') {
             achouNumero = true;
         } else if (c >= 'A' && c <= 'Z') {
             achouMaiuscula = true;
         } else if (c >= 'a' && c <= 'z') {
             achouMinuscula = true;
         } else {
             achouSimbolo = true;
         }
    }
    return achouNumero && achouMaiuscula && achouMinuscula && achouSimbolo;
}
    
    private void CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarActionPerformed

        boolean emailValido = isValidEmailAddressRegex(txtemail.getText());
        if (!emailValido){
            txtemail.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "E-mail inválido. Tente novamente.");
        } else {
            if (emailValido){
                try {
            if (!clientes.existeEmail(txtemail.getText())){
                txtemail.setForeground(Color.green);
                
            } else {
                txtemail.setForeground(Color.red);
                
            }
        } catch (Exception ex) {
            Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
        }
 
        boolean nomeValido = isValidName(txtuser.getText());
        if (!nomeValido){
            txtuser.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Nome inválido, tente novamente.");
        } else {
            txtuser.setForeground(Color.green);
        }

        if (!(txtps.getText().equals(txtps1.getText()))){
            txtps.setForeground(Color.red);
            txtps1.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Senhas diferentes. Tente novamente.");
        } else {
         if (txtps.getText().length() < 6 || txtps1.getText().length() < 6){
                txtps.setForeground(Color.red);
                txtps1.setForeground(Color.red);
                JOptionPane.showMessageDialog(rootPane, "Senha com menos de 6 caractéres. Tente novamente");
            } else {
                if(senhaValida(txtps.getText(), txtps1.getText())){
                    txtps.setForeground(Color.green);
                    txtps1.setForeground(Color.green); 
                   
                } else {
                    txtps.setForeground(Color.red);
                    txtps1.setForeground(Color.red); 
                    JOptionPane.showMessageDialog(rootPane, "A senha ainda não está de acordo com o padrão. Atente-se às condições.");
                }
                    
                
             } 
            try {
                if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido)) && (clientes.existeEmail(txtemail.getText()))) {
                    
                    
                    
                    txtemail.setForeground(Color.red);
                    JOptionPane.showMessageDialog(rootPane, "E-mail já cadastrado. ");
                    
                    
                } else {
                    try {
                        if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido) && (!clientes.existeEmail(txtemail.getText())))){
                            clientes.setNome(txtuser.getText());
                            clientes.setEmail(txtemail.getText());
                            clientes.setSenha(txtps.getText());
                            clientes.setSenha1(txtps1.getText());
                            
                            txtuser.setForeground(Color.green);
                            txtemail.setForeground(Color.green);
                            txtps.setForeground(Color.green);
                            txtps1.setForeground(Color.green);
                            
                            clientes.salvar();
                            
                            clientes.registrarEmail(txtemail.getText());
                            
                            arq2 = new File("numerocadastrados.txt");
                            FileWriter fw2 = new FileWriter(arq2, true);
                            PrintWriter pw2 = new PrintWriter(fw2);
                            pw2.write("1");
                             pw2.flush();
                            Scanner sc2 = new Scanner(arq2);              
                            while (sc2.hasNext()){
                                palavra = sc2.next();
                            }
                            cont = palavra.length();
                            pw2.flush();
                            pw2.close();
                            
                             
                            
                            File arq = new File("emails1.txt");
                            FileWriter fw = new FileWriter(arq, true);
                            PrintWriter pw = new PrintWriter(fw);
                            pw.write(txtemail.getText());
                            pw.flush();
                            pw.close();

                            JOptionPane.showMessageDialog(rootPane, "Cadastro feito com sucesso.");
                            System.exit(0);
                            txtuser.setText("");
                            txtemail.setText("");
                            txtps.setText("");
                            txtps1.setText("");
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            }
        
    }//GEN-LAST:event_CadastrarActionPerformed

  
    
    private void MenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MenuKeyPressed
        
    }//GEN-LAST:event_MenuKeyPressed

    private void CadastrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CadastrarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
         boolean emailValido = isValidEmailAddressRegex(txtemail.getText());
        if (!emailValido){
            txtemail.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "E-mail inválido. Tente novamente.");
        } else {
            if (emailValido){
                try {
            if (!clientes.existeEmail(txtemail.getText())){
                txtemail.setForeground(Color.green);
                
            } else {
                txtemail.setForeground(Color.red);
                
            }
        } catch (Exception ex) {
            Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
        }
 
        boolean nomeValido = isValidName(txtuser.getText());
        if (!nomeValido){
            txtuser.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Nome inválido, tente novamente.");
        } else {
            txtuser.setForeground(Color.green);
        }

        if (!(txtps.getText().equals(txtps1.getText()))){
            txtps.setForeground(Color.red);
            txtps1.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Senhas diferentes. Tente novamente.");
        } else {
         if (txtps.getText().length() < 6 || txtps1.getText().length() < 6){
                txtps.setForeground(Color.red);
                txtps1.setForeground(Color.red);
                JOptionPane.showMessageDialog(rootPane, "Senha com menos de 6 caractéres. Tente novamente");
            } else {
                if(senhaValida(txtps.getText(), txtps1.getText())){
                    txtps.setForeground(Color.green);
                    txtps1.setForeground(Color.green); 
                   
                } else {
                    txtps.setForeground(Color.red);
                    txtps1.setForeground(Color.red); 
                    JOptionPane.showMessageDialog(rootPane, "A senha ainda não está de acordo com o padrão. Atente-se às condições.");
                }
             } 
            try {
                if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido)) && (clientes.existeEmail(txtemail.getText()))) {   
                    txtemail.setForeground(Color.red);
                    JOptionPane.showMessageDialog(rootPane, "E-mail já cadastrado. ");  
                } else {
                    try {
                        if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido) && (!clientes.existeEmail(txtemail.getText())))){
                            clientes.setNome(txtuser.getText());
                            clientes.setEmail(txtemail.getText());
                            clientes.setSenha(txtps.getText());
                            clientes.setSenha1(txtps1.getText());
                            
                            txtuser.setForeground(Color.green);
                            txtemail.setForeground(Color.green);
                            txtps.setForeground(Color.green);
                            txtps1.setForeground(Color.green);
                            
                            clientes.salvar();
                            
                            clientes.registrarEmail(txtemail.getText());
                            clientes.registrarSenha(txtps.getText());
                            clientes.registrarNome(txtuser.getText());
                            
                           
                                        
                            
                            arq2 = new File("numerocadastrados.txt");
                            FileWriter fw2 = new FileWriter(arq2, true);
                            PrintWriter pw2 = new PrintWriter(fw2);
                            pw2.write("1");
                             pw2.flush();
                            Scanner sc2 = new Scanner(arq2);              
                            while (sc2.hasNext()){
                                palavra = sc2.next();
                            }
                            cont = palavra.length();
                            pw2.flush();
                            pw2.close();
                            
                            
                            
                            File arq = new File("emails1.txt");
                            FileWriter fw = new FileWriter(arq, true);
                            PrintWriter pw = new PrintWriter(fw);
                            pw.write(txtemail.getText());
                            pw.flush();
                            pw.close();

                            JOptionPane.showMessageDialog(rootPane, "Cadastro feito com sucesso.");
                            System.exit(0);
                            txtuser.setText("");
                            txtemail.setText("");
                            txtps.setText("");
                            txtps1.setText("");
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            }
        }
    }//GEN-LAST:event_CadastrarKeyPressed

    private void txtuserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtuserKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
         boolean emailValido = isValidEmailAddressRegex(txtemail.getText());
        if (!emailValido){
            txtemail.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "E-mail inválido. Tente novamente.");
        } else {
            if (emailValido){
                try {
            if (!clientes.existeEmail(txtemail.getText())){
                txtemail.setForeground(Color.green);
                
            } else {
                txtemail.setForeground(Color.red);
                
            }
        } catch (Exception ex) {
            Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
        }
 
        boolean nomeValido = isValidName(txtuser.getText());
        if (!nomeValido){
            txtuser.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Nome inválido, tente novamente.");
        } else {
            txtuser.setForeground(Color.green);
        }

        if (!(txtps.getText().equals(txtps1.getText()))){
            txtps.setForeground(Color.red);
            txtps1.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Senhas diferentes. Tente novamente.");
        } else {
         if (txtps.getText().length() < 6 || txtps1.getText().length() < 6){
                txtps.setForeground(Color.red);
                txtps1.setForeground(Color.red);
                JOptionPane.showMessageDialog(rootPane, "Senha com menos de 6 caractéres. Tente novamente");
            } else {
                if(senhaValida(txtps.getText(), txtps1.getText())){
                    txtps.setForeground(Color.green);
                    txtps1.setForeground(Color.green); 
                   
                } else {
                    txtps.setForeground(Color.red);
                    txtps1.setForeground(Color.red); 
                    JOptionPane.showMessageDialog(rootPane, "A senha ainda não está de acordo com o padrão. Atente-se às condições.");
                }
             } 
            try {
                if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido)) && (clientes.existeEmail(txtemail.getText()))) {   
                    txtemail.setForeground(Color.red);
                    JOptionPane.showMessageDialog(rootPane, "E-mail já cadastrado. ");  
                } else {
                    try {
                        if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido) && (!clientes.existeEmail(txtemail.getText())))){
                            clientes.setNome(txtuser.getText());
                            clientes.setEmail(txtemail.getText());
                            clientes.setSenha(txtps.getText());
                            clientes.setSenha1(txtps1.getText());
                            
                            txtuser.setForeground(Color.green);
                            txtemail.setForeground(Color.green);
                            txtps.setForeground(Color.green);
                            txtps1.setForeground(Color.green);
                            
                            clientes.salvar();
                            
                            clientes.registrarEmail(txtemail.getText());
                            clientes.registrarSenha(txtps.getText());
                            clientes.registrarNome(txtuser.getText());
                            
                           
                                        
                            
                            arq2 = new File("numerocadastrados.txt");
                            FileWriter fw2 = new FileWriter(arq2, true);
                            PrintWriter pw2 = new PrintWriter(fw2);
                            pw2.write("1");
                             pw2.flush();
                            Scanner sc2 = new Scanner(arq2);              
                            while (sc2.hasNext()){
                                palavra = sc2.next();
                            }
                            cont = palavra.length();
                            pw2.flush();
                            pw2.close();
                            
                            
                            
                            File arq = new File("emails1.txt");
                            FileWriter fw = new FileWriter(arq, true);
                            PrintWriter pw = new PrintWriter(fw);
                            pw.write(txtemail.getText());
                            pw.flush();
                            pw.close();

                            JOptionPane.showMessageDialog(rootPane, "Cadastro feito com sucesso.");
                            System.exit(0);
                            txtuser.setText("");
                            txtemail.setText("");
                            txtps.setText("");
                            txtps1.setText("");
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            }
        }
    }//GEN-LAST:event_txtuserKeyPressed

    private void txtemailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtemailKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
         boolean emailValido = isValidEmailAddressRegex(txtemail.getText());
        if (!emailValido){
            txtemail.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "E-mail inválido. Tente novamente.");
        } else {
            if (emailValido){
                try {
            if (!clientes.existeEmail(txtemail.getText())){
                txtemail.setForeground(Color.green);
                
            } else {
                txtemail.setForeground(Color.red);
                
            }
        } catch (Exception ex) {
            Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
        }
 
        boolean nomeValido = isValidName(txtuser.getText());
        if (!nomeValido){
            txtuser.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Nome inválido, tente novamente.");
        } else {
            txtuser.setForeground(Color.green);
        }

        if (!(txtps.getText().equals(txtps1.getText()))){
            txtps.setForeground(Color.red);
            txtps1.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Senhas diferentes. Tente novamente.");
        } else {
         if (txtps.getText().length() < 6 || txtps1.getText().length() < 6){
                txtps.setForeground(Color.red);
                txtps1.setForeground(Color.red);
                JOptionPane.showMessageDialog(rootPane, "Senha com menos de 6 caractéres. Tente novamente");
            } else {
                if(senhaValida(txtps.getText(), txtps1.getText())){
                    txtps.setForeground(Color.green);
                    txtps1.setForeground(Color.green); 
                   
                } else {
                    txtps.setForeground(Color.red);
                    txtps1.setForeground(Color.red); 
                    JOptionPane.showMessageDialog(rootPane, "A senha ainda não está de acordo com o padrão. Atente-se às condições.");
                }
             } 
            try {
                if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido)) && (clientes.existeEmail(txtemail.getText()))) {   
                    txtemail.setForeground(Color.red);
                    JOptionPane.showMessageDialog(rootPane, "E-mail já cadastrado. ");  
                } else {
                    try {
                        if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido) && (!clientes.existeEmail(txtemail.getText())))){
                            clientes.setNome(txtuser.getText());
                            clientes.setEmail(txtemail.getText());
                            clientes.setSenha(txtps.getText());
                            clientes.setSenha1(txtps1.getText());
                            
                            txtuser.setForeground(Color.green);
                            txtemail.setForeground(Color.green);
                            txtps.setForeground(Color.green);
                            txtps1.setForeground(Color.green);
                            
                            clientes.salvar();
                            
                            clientes.registrarEmail(txtemail.getText());
                            clientes.registrarSenha(txtps.getText());
                            clientes.registrarNome(txtuser.getText());
                            
                           
                                        
                            
                            arq2 = new File("numerocadastrados.txt");
                            FileWriter fw2 = new FileWriter(arq2, true);
                            PrintWriter pw2 = new PrintWriter(fw2);
                            pw2.write("1");
                             pw2.flush();
                            Scanner sc2 = new Scanner(arq2);              
                            while (sc2.hasNext()){
                                palavra = sc2.next();
                            }
                            cont = palavra.length();
                            pw2.flush();
                            pw2.close();
                            
                            
                            
                            File arq = new File("emails1.txt");
                            FileWriter fw = new FileWriter(arq, true);
                            PrintWriter pw = new PrintWriter(fw);
                            pw.write(txtemail.getText());
                            pw.flush();
                            pw.close();

                            JOptionPane.showMessageDialog(rootPane, "Cadastro feito com sucesso.");
                            System.exit(0);
                            txtuser.setText("");
                            txtemail.setText("");
                            txtps.setText("");
                            txtps1.setText("");
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            }
        }
    }//GEN-LAST:event_txtemailKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int opçao = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?", "Confirmar saída", JOptionPane.YES_OPTION);
        if (opçao == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void erroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erroActionPerformed
       try{
        Desktop.getDesktop().browse(new URL("https://www.nestle.com.br/converse-com-a-gente/servico-nestle-ao-consumidor").toURI());
       }
       catch (IOException | URISyntaxException ex) {
            Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_erroActionPerformed

    private void txtuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtuserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtuserActionPerformed

    private void txtpsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpsKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
         boolean emailValido = isValidEmailAddressRegex(txtemail.getText());
        if (!emailValido){
            txtemail.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "E-mail inválido. Tente novamente.");
        } else {
            if (emailValido){
                try {
            if (!clientes.existeEmail(txtemail.getText())){
                txtemail.setForeground(Color.green);
                
            } else {
                txtemail.setForeground(Color.red);
                
            }
        } catch (Exception ex) {
            Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
        }
 
        boolean nomeValido = isValidName(txtuser.getText());
        if (!nomeValido){
            txtuser.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Nome inválido, tente novamente.");
        } else {
            txtuser.setForeground(Color.green);
        }

        if (!(txtps.getText().equals(txtps1.getText()))){
            txtps.setForeground(Color.red);
            txtps1.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Senhas diferentes. Tente novamente.");
        } else {
         if (txtps.getText().length() < 6 || txtps1.getText().length() < 6){
                txtps.setForeground(Color.red);
                txtps1.setForeground(Color.red);
                JOptionPane.showMessageDialog(rootPane, "Senha com menos de 6 caractéres. Tente novamente");
            } else {
                if(senhaValida(txtps.getText(), txtps1.getText())){
                    txtps.setForeground(Color.green);
                    txtps1.setForeground(Color.green); 
                   
                } else {
                    txtps.setForeground(Color.red);
                    txtps1.setForeground(Color.red); 
                    JOptionPane.showMessageDialog(rootPane, "A senha ainda não está de acordo com o padrão. Atente-se às condições.");
                }
             } 
            try {
                if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido)) && (clientes.existeEmail(txtemail.getText()))) {   
                    txtemail.setForeground(Color.red);
                    JOptionPane.showMessageDialog(rootPane, "E-mail já cadastrado. ");  
                } else {
                    try {
                        if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido) && (!clientes.existeEmail(txtemail.getText())))){
                            clientes.setNome(txtuser.getText());
                            clientes.setEmail(txtemail.getText());
                            clientes.setSenha(txtps.getText());
                            clientes.setSenha1(txtps1.getText());
                            
                            txtuser.setForeground(Color.green);
                            txtemail.setForeground(Color.green);
                            txtps.setForeground(Color.green);
                            txtps1.setForeground(Color.green);
                            
                            clientes.salvar();
                            
                            clientes.registrarEmail(txtemail.getText());
                            clientes.registrarSenha(txtps.getText());
                            clientes.registrarNome(txtuser.getText());
                            
                           
                                        
                            
                            arq2 = new File("numerocadastrados.txt");
                            FileWriter fw2 = new FileWriter(arq2, true);
                            PrintWriter pw2 = new PrintWriter(fw2);
                            pw2.write("1");
                             pw2.flush();
                            Scanner sc2 = new Scanner(arq2);              
                            while (sc2.hasNext()){
                                palavra = sc2.next();
                            }
                            cont = palavra.length();
                            pw2.flush();
                            pw2.close();
                            
                            
                            
                            File arq = new File("emails1.txt");
                            FileWriter fw = new FileWriter(arq, true);
                            PrintWriter pw = new PrintWriter(fw);
                            pw.write(txtemail.getText());
                            pw.flush();
                            pw.close();

                            JOptionPane.showMessageDialog(rootPane, "Cadastro feito com sucesso.");
                            System.exit(0);
                            txtuser.setText("");
                            txtemail.setText("");
                            txtps.setText("");
                            txtps1.setText("");
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            }
        }
    }//GEN-LAST:event_txtpsKeyPressed

    private void txtps1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtps1KeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
         boolean emailValido = isValidEmailAddressRegex(txtemail.getText());
        if (!emailValido){
            txtemail.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "E-mail inválido. Tente novamente.");
        } else {
            if (emailValido){
                try {
            if (!clientes.existeEmail(txtemail.getText())){
                txtemail.setForeground(Color.green);
                
            } else {
                txtemail.setForeground(Color.red);
                
            }
        } catch (Exception ex) {
            Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
        }
 
        boolean nomeValido = isValidName(txtuser.getText());
        if (!nomeValido){
            txtuser.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Nome inválido, tente novamente.");
        } else {
            txtuser.setForeground(Color.green);
        }

        if (!(txtps.getText().equals(txtps1.getText()))){
            txtps.setForeground(Color.red);
            txtps1.setForeground(Color.red);
            JOptionPane.showMessageDialog(rootPane, "Senhas diferentes. Tente novamente.");
        } else {
         if (txtps.getText().length() < 6 || txtps1.getText().length() < 6){
                txtps.setForeground(Color.red);
                txtps1.setForeground(Color.red);
                JOptionPane.showMessageDialog(rootPane, "Senha com menos de 6 caractéres. Tente novamente");
            } else {
                if(senhaValida(txtps.getText(), txtps1.getText())){
                    txtps.setForeground(Color.green);
                    txtps1.setForeground(Color.green); 
                   
                } else {
                    txtps.setForeground(Color.red);
                    txtps1.setForeground(Color.red); 
                    JOptionPane.showMessageDialog(rootPane, "A senha ainda não está de acordo com o padrão. Atente-se às condições.");
                }
             } 
            try {
                if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido)) && (clientes.existeEmail(txtemail.getText()))) {   
                    txtemail.setForeground(Color.red);
                    JOptionPane.showMessageDialog(rootPane, "E-mail já cadastrado. ");  
                } else {
                    try {
                        if((senhaValida(txtps.getText(), txtps1.getText()) && nomeValido && (emailValido) && (!clientes.existeEmail(txtemail.getText())))){
                            clientes.setNome(txtuser.getText());
                            clientes.setEmail(txtemail.getText());
                            clientes.setSenha(txtps.getText());
                            clientes.setSenha1(txtps1.getText());
                            
                            txtuser.setForeground(Color.green);
                            txtemail.setForeground(Color.green);
                            txtps.setForeground(Color.green);
                            txtps1.setForeground(Color.green);
                            
                            clientes.salvar();
                            
                            clientes.registrarEmail(txtemail.getText());
                            clientes.registrarSenha(txtps.getText());
                            clientes.registrarNome(txtuser.getText());
                            
                           
                                        
                            
                            arq2 = new File("numerocadastrados.txt");
                            FileWriter fw2 = new FileWriter(arq2, true);
                            PrintWriter pw2 = new PrintWriter(fw2);
                            pw2.write("1");
                             pw2.flush();
                            Scanner sc2 = new Scanner(arq2);              
                            while (sc2.hasNext()){
                                palavra = sc2.next();
                            }
                            cont = palavra.length();
                            pw2.flush();
                            pw2.close();
                            
                            
                            
                            File arq = new File("emails1.txt");
                            FileWriter fw = new FileWriter(arq, true);
                            PrintWriter pw = new PrintWriter(fw);
                            pw.write(txtemail.getText());
                            pw.flush();
                            pw.close();

                            JOptionPane.showMessageDialog(rootPane, "Cadastro feito com sucesso.");
                            System.exit(0);
                            txtuser.setText("");
                            txtemail.setText("");
                            txtps.setText("");
                            txtps1.setText("");
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(InterfaceCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            }
        }
    }//GEN-LAST:event_txtps1KeyPressed
        
    
    
    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void olhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_olhoMouseClicked
       txtps.setEchoChar((char) 0);
        txtps1.setEchoChar((char) 0);
        olho.setVisible(false);
        olho2.setVisible(true);
    }//GEN-LAST:event_olhoMouseClicked
 
    private void olho2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_olho2MouseClicked
                txtps.setEchoChar('*');
        txtps1.setEchoChar('*');
        olho.setVisible(true);
        olho2.setVisible(false);
    }//GEN-LAST:event_olho2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceCadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cadastrar;
    private javax.swing.JButton Menu;
    private javax.swing.JButton erro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel olho;
    private javax.swing.JLabel olho2;
    private javax.swing.JTextField txtemail;
    private javax.swing.JPasswordField txtps;
    private javax.swing.JPasswordField txtps1;
    private javax.swing.JTextField txtuser;
    // End of variables declaration//GEN-END:variables
}
